#+SETUPFILE: ../theme-readtheorg.setup
#+TITLE: Bluetooth Management in Florida Stack
#+OPTIONS: ^:{} 

* Device configuration

* Bluetooth Interface

  1. btif_dm_execute_service_request

     btif_enable_service/btif_disable_service will call this function
     to enable a service(profile). 

     then it will  call back jni function *adapter_properties_cb* . 

     #+BEGIN_SRC plantuml :exports results :file ../images/2018/2018102201.png :cmdline -charset UTF-8
       @startuml
       [--> btif_core.c: btif_enable_service
       btif_core.c -> btif_dm.c: btif_dm_execute_service_request
       btif_dm.c -> btif_dm.c:  btif_in_execute_service_request
       btif_dm.c -->]: btif_xx_execute_service
       btif_dm.c -->]: adapter_properties_cb
       @enduml
     #+END_SRC

     #+RESULTS:
     [[file:../images/2018/2018102201.png]]


* ACL Management
** data structure

   #+BEGIN_SRC c
     typedef struct {

       ...

     /****************************************************
      ,**      ACL Management
      ,****************************************************/
       tACL_CONN acl_db[MAX_L2CAP_LINKS];
       uint8_t btm_scn[BTM_MAX_SCN]; /* current SCNs: true if SCN is in use */
       uint16_t btm_def_link_policy;
       uint16_t btm_def_link_super_tout;

       tBTM_BL_EVENT_MASK bl_evt_mask;
       tBTM_BL_CHANGE_CB* p_bl_changed_cb; /* Callback for when Busy Level changed */

       ...
     }tBTM_CB;
   #+END_SRC

   
   
* Power Management
** data structure

   #+BEGIN_SRC c
     typedef struct {

       ...

     /****************************************************
      ,**      Power Management
      ,****************************************************/
       tBTM_PM_MCB pm_mode_db[MAX_L2CAP_LINKS];       /* per ACL link */
       tBTM_PM_RCB pm_reg_db[BTM_MAX_PM_RECORDS + 1]; /* per application/module */
       uint8_t pm_pend_link; /* the index of acl_db, which has a pending PM cmd */
       uint8_t pm_pend_id;   /* the id pf the module, which has a pending PM cmd */

       ...
     }tBTM_CB;
   #+END_SRC

   //trigger to exit sniff mode
   bta_sys_busy(BTA_ID_AG, p_scb->app_id, p_scb->peer_addr); //unsniff

   //trigger to enter sniff mode
   bta_sys_idle(BTA_ID_AG, p_scb->app_id, p_scb->peer_addr);//sniff

   //set enable or disable sniff mode
   bta_sys_set_policy
   bta_sys_clear_policy

   //set power mode
   BTM_SetPowerMode

   bta_dm_pm_cback

   @btm_pm.cc
   
* Device control
* BLE Device controllers
* Inquiry
* SCO Management
* Security Management
